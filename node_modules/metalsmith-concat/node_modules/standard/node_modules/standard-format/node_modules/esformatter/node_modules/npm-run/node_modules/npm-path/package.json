{
  "_args": [
    [
      {
        "raw": "npm-path@https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
        "scope": null,
        "escapedName": "npm-path",
        "name": "npm-path",
        "rawSpec": "https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
        "type": "remote"
      },
      "/Users/edward/Sites/edes/node_modules/metalsmith-concat"
    ]
  ],
  "_from": "npm-path@https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
  "_id": "npm-path@1.0.2",
  "_inCache": true,
  "_location": "/metalsmith-concat/standard/standard-format/esformatter/npm-run/npm-path",
  "_phantomChildren": {},
  "_requested": {
    "raw": "npm-path@https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
    "scope": null,
    "escapedName": "npm-path",
    "name": "npm-path",
    "rawSpec": "https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-concat/standard/standard-format/esformatter/npm-run"
  ],
  "_resolved": "https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
  "_shasum": "e7f6ecf5e51f8ef972cbaa3b2c29cebc2d69a870",
  "_shrinkwrap": null,
  "_spec": "npm-path@https://registry.npmjs.org/npm-path/-/npm-path-1.0.2.tgz",
  "_where": "/Users/edward/Sites/edes/node_modules/metalsmith-concat",
  "author": {
    "name": "Tim Oxley"
  },
  "bin": {
    "npm-path": "bin/npm-path"
  },
  "bugs": {
    "url": "https://github.com/timoxley/npm-path/issues"
  },
  "dependencies": {
    "which": "^1.1.1"
  },
  "description": "Get a PATH with all executables available to npm scripts.",
  "devDependencies": {
    "faucet": "0.0.1",
    "tape": "^4.0.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/timoxley/npm-path",
  "keywords": [
    "npm",
    "run",
    "executable"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "npm-path",
  "optionalDependencies": {},
  "readme": "# npm-path\n\n### Get a PATH containing locally installed module executables.\n\n`npm-path` will get you a PATH with all of the executables available to npm scripts, without booting up all of npm(1).\n\n#### `npm-path` will set your PATH to include:\n\n* All of the `node_modules/.bin` directories from the current directory, up through all of its parents. This allows you to invoke the executables for any installed modules. e.g. if `mocha` is installed a dependency of the current module, then `mocha` will be available on a `npm-path` generated `$PATH`.\n* The directory containing the current `node` executable, so any scripts that invoke `node` will execute the same `node`.\n* Current npm's `node-gyp` directory, so the `node-gyp` bundled with `npm` can be used.\n\n## Usage\n\n### Command-line\n\n```bash\n# Prints the augmented PATH to the console\n> npm-path\n# /usr/local/lib/node_modules/npm/bin/node-gyp-bin:.../node_modules/.bin:/.../usr/local/bin:/usr/local/sbin: ... etc\n```\n\nCalling `npm-path` from the commandline is the equivalent of executing an npm script with the body `echo $PATH`, but without all of the overhead of booting or depending on `npm`.\n\n### Set PATH\n\nThis will set the augmented PATH for the current process environment, or an environment you supply.\n\n```js\nvar npmPath = require('npm-path')\nvar PATH = npmPath.PATH // get platform independent PATH key\n\nnpmPath(function(err, $PATH) {\n  \n  // Note: current environment is modified!\n  console.log(process.env[PATH] == $PATH) // true\n  \n  console.log($PATH)\n  // /usr/local/lib/node_modules/npm/bin/node-gyp-bin:/.../.bin:/usr/local/bin: ...etc\n  \n})\n\n// more explicit alternative syntax\nnpmPath.set(function(err, $PATH) {\n  // ...\n})\n```\n\n#### Synchronous Alternative\n\n```js\n\n//  supplying no callback will execute method synchronously\nvar $PATH = npmPath()\nconsole.log($PATH)\n\n// more explicit alternative syntax\n$PATH = npmPath.setSync()\n```\n\n#### Optional Options\n\n```js\nvar options = {\n  env: process.env, // default.\n  cwd: process.cwd() // default.\n}\n\nnpmPath(options, function(err, $PATH) {\n  // ...\n})\n\nnpmPath.setSync(options)\n\n  // ...\n\n```\n\n\n### Get PATH\n\nThis will get npm augmented PATH, but *does not modify the PATH in the environment*.\nTakes the exact same options as `set`.\n\n```js\nnpmPath.get(function(err, $PATH) {\n  console.log($PATH)\n  \n  // Note: current environment is NOT modified!\n  console.log(process.env[PATH] == $PATH) // false\n})\n\n// options is optional, takes same options as `npmPath.set`\nnpmPath.get(options, function(err, $PATH) {\n  console.log($PATH)\n})\n```\n\n#### Synchronous Alternative\n\n```js\n//  supplying no callback will execute method synchronously\nvar $PATH = npmPath.get()\nconsole.log($PATH)\nconsole.log(process.env[PATH] == $PATH) // false\n\n// more explicit alternative syntax\n$PATH = npmPath.getSync()\n\n```\n\n### Options\n\nBoth `set` and `get` take an optional options object, with optional `env` & `cwd` keys.\n\n* Set `options.env` if you wish to use something other than `process.env` (the default)\n* Set `options.cwd` if you wish to use something other than `process.cwd()` (the default)\n\nThere's also a `options.npm` property which you can set if you want `node-gyp` to be sourced from\nan alternative `npm` installation.\n\n### Get the PATH environment variable key\n\n```js\n// windows calls it's path \"Path\" usually, but this is not guaranteed.\nnpmPath.PATH // 'Path', probably\n\n// rest of the world\nnpmPath.PATH // 'PATH'\n\n```\n\n#### Example Usage\n\n```js\nprocess.env[npmPath.PATH] // get path environment variable\n\n// set path environment variable manually\nprocess.env[npmPath.PATH] = npmPath.get()\n\n// set path environment variable automatically\nnpmPath()\n```\n\n### Get the PATH separator\n\n```js\n// windows\nnpmPath.SEPARATOR // ';'\n\n// rest of the world\nnpmPath.SEPARATOR // ':'\n```\n\n## Credit\n\nPath lookup code adapted directly from npm.\n\n# License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timoxley/npm-path.git"
  },
  "scripts": {
    "test": "faucet"
  },
  "version": "1.0.2"
}
