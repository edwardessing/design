{
  "_args": [
    [
      {
        "raw": "protochain@https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
        "scope": null,
        "escapedName": "protochain",
        "name": "protochain",
        "rawSpec": "https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
        "spec": "https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
        "type": "remote"
      },
      "/Users/edward/Sites/edes/node_modules/metalsmith-concat"
    ]
  ],
  "_from": "protochain@https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
  "_id": "protochain@1.0.3",
  "_inCache": true,
  "_location": "/metalsmith-concat/standard/standard-format/esformatter/npm-run/serializerr/protochain",
  "_phantomChildren": {},
  "_requested": {
    "raw": "protochain@https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
    "scope": null,
    "escapedName": "protochain",
    "name": "protochain",
    "rawSpec": "https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
    "spec": "https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/metalsmith-concat/standard/standard-format/esformatter/npm-run/serializerr"
  ],
  "_resolved": "https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
  "_shasum": "da0c160d674d6ac4d072778ba5ae3e24b4e1475c",
  "_shrinkwrap": null,
  "_spec": "protochain@https://registry.npmjs.org/protochain/-/protochain-1.0.3.tgz",
  "_where": "/Users/edward/Sites/edes/node_modules/metalsmith-concat",
  "author": {
    "name": "Tim Oxley",
    "email": "secoif@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/timoxley/protochain/issues"
  },
  "dependencies": {},
  "description": "Prototype chain of any value as an Array",
  "devDependencies": {
    "babel": "^5.6.14",
    "tape": "^4.0.0"
  },
  "homepage": "https://github.com/timoxley/protochain",
  "keywords": [
    "object",
    "inherit",
    "prototypical",
    "utility",
    "proto",
    "hierarchy",
    "ancestors",
    "grandparents",
    "parents"
  ],
  "license": "ISC",
  "main": "protochain.js",
  "name": "protochain",
  "optionalDependencies": {},
  "readme": "# protochain\n\n[![Build Status](https://travis-ci.org/timoxley/protochain.svg?branch=master)](https://travis-ci.org/timoxley/protochain)\n\nGet the prototype chain of an object or primitive as an Array.\n\n## Why\n\nI often write this function, figure I should extract it. There are\nprobably other utilities out there that do this but I couldn't find\nthem so they're either poorly named/described or the search algorithm is not being very helpful or I simply searched for the wrong things.\n\n## Installation\n\n```\n> npm install protochain\n```\n\n## Usage\n\n### ES5\n\n```js\nvar protochain = require('protochain')\n\nprotochain({})\n// => [Object.prototype]\n\nprotochain(Object.create(null))\n// => []\n\nprotochain(new Error('message'))\n// => [Error.prototype, Object.prototype]\n\nprotochain(new TypeError('message'))\n// => [TypeError.prototype, Error.prototype, Object.prototype]\n\n// Inheritance\n\nfunction Person() {\n\n}\n\nfunction FancyPerson() {\n  Person.call(this)\n}\n\nFancyPerson.prototype = Object.create(Person.prototype)\n\nprotochain(new Person())\n// => [Person.prototype, Object.prototype]\n\nprotochain(new FancyPerson())\n// => [FancyPerson.prototype, Person.prototype, Object.prototype]\n\n// Primitives are OK\n\nprotochain(123)\n// => [Number.prototype, Object.prototype]\n\nprotochain('abc')\n// => [String.prototype, Object.prototype]\n\nprotochain(/abc/)\n// => [RegExp.prototype, Object.prototype]\n\nprotochain(true)\n// => [Boolean.prototype, Object.prototype]\n\nprotochain(false)\n// => [Boolean.prototype, Object.prototype]\n\n// Null & Undefined === Empty List\n\nprotochain(null)\n// => []\n\nprotochain(undefined)\n// => []\n\nprotochain()\n// => []\n```\n\n### ES6\n\n```js\n\nimport protochain from 'protochain'\n\nclass Person {}\nclass FancyPerson extends Person {}\n\nprotochain(new Person())\n// => [Person.prototype, Object.prototype]\n\nprotochain(new FancyPerson())\n// => [FancyPerson.prototype, Person.prototype, Object.prototype])\n\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timoxley/protochain.git"
  },
  "scripts": {
    "posttest": "rm protochain-test.js",
    "prepublish": "babel index.js > protochain.js",
    "pretest": "npm run prepublish",
    "test": "(babel test.js > protochain-test.js) && tape protochain-test.js"
  },
  "version": "1.0.3"
}
